"""change schemas transactions

Revision ID: 744f99817ca1
Revises: 70f02dcdd70c
Create Date: 2025-09-10 12:56:08.618380

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '744f99817ca1'
down_revision: Union[str, Sequence[str], None] = '70f02dcdd70c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('customers', sa.Column('first_name', sa.String(length=100), nullable=True))
    op.add_column('customers', sa.Column('last_name', sa.String(length=100), nullable=True))
    op.add_column('customers', sa.Column('email', sa.String(length=255), nullable=True))
    op.add_column('customers', sa.Column('phone', sa.String(length=20), nullable=True))
    op.add_column('customers', sa.Column('date_of_birth', sa.Date(), nullable=True))
    op.add_column('customers', sa.Column('address', sa.Text(), nullable=True))
    op.add_column('customers', sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False))
    op.add_column('customers', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.alter_column('customers', 'gender',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
    op.alter_column('customers', 'age',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_customers_email'), 'customers', ['email'], unique=False)
    op.drop_constraint(op.f('customers_user_id_fkey'), 'customers', type_='foreignkey')
    op.drop_column('customers', 'user_id')
    op.add_column('product_categories', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('product_categories', sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False))
    op.add_column('product_categories', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.drop_constraint(op.f('product_categories_name_key'), 'product_categories', type_='unique')
    op.create_index(op.f('ix_product_categories_name'), 'product_categories', ['name'], unique=True)
    op.add_column('products', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('products', sa.Column('sku', sa.String(length=100), nullable=True))
    op.add_column('products', sa.Column('cost_per_unit', sa.Numeric(precision=12, scale=2), nullable=True))
    op.add_column('products', sa.Column('stock_quantity', sa.Integer(), server_default="0", nullable=False))
    op.add_column('products', sa.Column('min_stock_level', sa.Integer(), nullable=True))
    op.add_column('products', sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False))
    op.add_column('products', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.create_index(op.f('ix_products_name'), 'products', ['name'], unique=False)
    op.create_index(op.f('ix_products_sku'), 'products', ['sku'], unique=True)
    op.add_column('transaction_items', sa.Column('discount_per_unit', sa.Numeric(precision=12, scale=2), server_default="0.00", nullable=False))
    op.add_column('transaction_items', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('transactions', sa.Column('transaction_number', sa.String(length=50), nullable=False))
    op.add_column('transactions', sa.Column('subtotal', sa.Numeric(precision=12, scale=2), nullable=False))
    op.add_column('transactions', sa.Column('tax_amount', sa.Numeric(precision=12, scale=2), nullable=False))
    op.add_column('transactions', sa.Column('discount_amount', sa.Numeric(precision=12, scale=2), nullable=False))
    op.add_column('transactions', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.create_index(op.f('ix_transactions_transaction_date'), 'transactions', ['transaction_date'], unique=False)
    op.create_index(op.f('ix_transactions_transaction_number'), 'transactions', ['transaction_number'], unique=True)
    op.add_column('users', sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False))
    op.add_column('users', sa.Column('last_login', sa.DateTime(timezone=True), nullable=True))
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'is_active')
    op.drop_index(op.f('ix_transactions_transaction_number'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_transaction_date'), table_name='transactions')
    op.drop_column('transactions', 'created_at')
    op.drop_column('transactions', 'discount_amount')
    op.drop_column('transactions', 'tax_amount')
    op.drop_column('transactions', 'subtotal')
    op.drop_column('transactions', 'transaction_number')
    op.drop_column('transaction_items', 'created_at')
    op.drop_column('transaction_items', 'discount_per_unit')
    op.drop_index(op.f('ix_products_sku'), table_name='products')
    op.drop_index(op.f('ix_products_name'), table_name='products')
    op.drop_column('products', 'updated_at')
    op.drop_column('products', 'is_active')
    op.drop_column('products', 'min_stock_level')
    op.drop_column('products', 'stock_quantity')
    op.drop_column('products', 'cost_per_unit')
    op.drop_column('products', 'sku')
    op.drop_column('products', 'description')
    op.drop_index(op.f('ix_product_categories_name'), table_name='product_categories')
    op.create_unique_constraint(op.f('product_categories_name_key'), 'product_categories', ['name'], postgresql_nulls_not_distinct=False)
    op.drop_column('product_categories', 'created_at')
    op.drop_column('product_categories', 'is_active')
    op.drop_column('product_categories', 'description')
    op.add_column('customers', sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('customers_user_id_fkey'), 'customers', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_customers_email'), table_name='customers')
    op.alter_column('customers', 'age',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('customers', 'gender',
               existing_type=sa.VARCHAR(length=10),
               nullable=False)
    op.drop_column('customers', 'updated_at')
    op.drop_column('customers', 'is_active')
    op.drop_column('customers', 'address')
    op.drop_column('customers', 'date_of_birth')
    op.drop_column('customers', 'phone')
    op.drop_column('customers', 'email')
    op.drop_column('customers', 'last_name')
    op.drop_column('customers', 'first_name')
    # ### end Alembic commands ###
