/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as OauthCallbackRouteImport } from './routes/oauth-callback'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as _protectedRouteImport } from './routes/__protected'
import { Route as _protectedNewsDashboardRouteImport } from './routes/__protected/news-dashboard'
import { Route as _protectedDashboardRouteImport } from './routes/__protected/dashboard'

const OauthCallbackRoute = OauthCallbackRouteImport.update({
  id: '/oauth-callback',
  path: '/oauth-callback',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const _protectedRoute = _protectedRouteImport.update({
  id: '/__protected',
  getParentRoute: () => rootRouteImport,
} as any)
const _protectedNewsDashboardRoute = _protectedNewsDashboardRouteImport.update({
  id: '/news-dashboard',
  path: '/news-dashboard',
  getParentRoute: () => _protectedRoute,
} as any)
const _protectedDashboardRoute = _protectedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => _protectedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRoute
  '/oauth-callback': typeof OauthCallbackRoute
  '/dashboard': typeof _protectedDashboardRoute
  '/news-dashboard': typeof _protectedNewsDashboardRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRoute
  '/oauth-callback': typeof OauthCallbackRoute
  '/dashboard': typeof _protectedDashboardRoute
  '/news-dashboard': typeof _protectedNewsDashboardRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/__protected': typeof _protectedRouteWithChildren
  '/auth': typeof AuthRoute
  '/oauth-callback': typeof OauthCallbackRoute
  '/__protected/dashboard': typeof _protectedDashboardRoute
  '/__protected/news-dashboard': typeof _protectedNewsDashboardRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/auth' | '/oauth-callback' | '/dashboard' | '/news-dashboard'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth' | '/oauth-callback' | '/dashboard' | '/news-dashboard'
  id:
    | '__root__'
    | '/__protected'
    | '/auth'
    | '/oauth-callback'
    | '/__protected/dashboard'
    | '/__protected/news-dashboard'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  _protectedRoute: typeof _protectedRouteWithChildren
  AuthRoute: typeof AuthRoute
  OauthCallbackRoute: typeof OauthCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/oauth-callback': {
      id: '/oauth-callback'
      path: '/oauth-callback'
      fullPath: '/oauth-callback'
      preLoaderRoute: typeof OauthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__protected': {
      id: '/__protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _protectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__protected/news-dashboard': {
      id: '/__protected/news-dashboard'
      path: '/news-dashboard'
      fullPath: '/news-dashboard'
      preLoaderRoute: typeof _protectedNewsDashboardRouteImport
      parentRoute: typeof _protectedRoute
    }
    '/__protected/dashboard': {
      id: '/__protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof _protectedDashboardRouteImport
      parentRoute: typeof _protectedRoute
    }
  }
}

interface _protectedRouteChildren {
  _protectedDashboardRoute: typeof _protectedDashboardRoute
  _protectedNewsDashboardRoute: typeof _protectedNewsDashboardRoute
}

const _protectedRouteChildren: _protectedRouteChildren = {
  _protectedDashboardRoute: _protectedDashboardRoute,
  _protectedNewsDashboardRoute: _protectedNewsDashboardRoute,
}

const _protectedRouteWithChildren = _protectedRoute._addFileChildren(
  _protectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  _protectedRoute: _protectedRouteWithChildren,
  AuthRoute: AuthRoute,
  OauthCallbackRoute: OauthCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
